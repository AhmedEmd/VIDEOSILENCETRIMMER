"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.allOptions = void 0;
const audio_bitrate_1 = require("./audio-bitrate");
const audio_codec_1 = require("./audio-codec");
const beep_on_finish_1 = require("./beep-on-finish");
const binaries_directory_1 = require("./binaries-directory");
const color_space_1 = require("./color-space");
const crf_1 = require("./crf");
const delete_after_1 = require("./delete-after");
const disable_git_source_1 = require("./disable-git-source");
const enable_lambda_insights_1 = require("./enable-lambda-insights");
const enable_multiprocess_on_linux_1 = require("./enable-multiprocess-on-linux");
const encoding_buffer_size_1 = require("./encoding-buffer-size");
const encoding_max_rate_1 = require("./encoding-max-rate");
const enforce_audio_1 = require("./enforce-audio");
const folder_expiry_1 = require("./folder-expiry");
const for_seamless_aac_concatenation_1 = require("./for-seamless-aac-concatenation");
const gl_1 = require("./gl");
const headless_1 = require("./headless");
const jpeg_quality_1 = require("./jpeg-quality");
const log_level_1 = require("./log-level");
const mute_1 = require("./mute");
const number_of_gif_loops_1 = require("./number-of-gif-loops");
const offthreadvideo_cache_size_1 = require("./offthreadvideo-cache-size");
const on_browser_download_1 = require("./on-browser-download");
const overwrite_1 = require("./overwrite");
const prefer_lossless_1 = require("./prefer-lossless");
const public_dir_1 = require("./public-dir");
const public_path_1 = require("./public-path");
const repro_1 = require("./repro");
const scale_1 = require("./scale");
const separate_audio_1 = require("./separate-audio");
const throw_if_site_exists_1 = require("./throw-if-site-exists");
const timeout_1 = require("./timeout");
const video_bitrate_1 = require("./video-bitrate");
const video_codec_1 = require("./video-codec");
const webhook_custom_data_1 = require("./webhook-custom-data");
const x264_preset_1 = require("./x264-preset");
exports.allOptions = {
    audioCodecOption: audio_codec_1.audioCodecOption,
    scaleOption: scale_1.scaleOption,
    crfOption: crf_1.crfOption,
    jpegQualityOption: jpeg_quality_1.jpegQualityOption,
    videoBitrateOption: video_bitrate_1.videoBitrateOption,
    audioBitrateOption: audio_bitrate_1.audioBitrateOption,
    enforceAudioOption: enforce_audio_1.enforceAudioOption,
    mutedOption: mute_1.mutedOption,
    videoCodecOption: video_codec_1.videoCodecOption,
    offthreadVideoCacheSizeInBytesOption: offthreadvideo_cache_size_1.offthreadVideoCacheSizeInBytesOption,
    webhookCustomDataOption: webhook_custom_data_1.webhookCustomDataOption,
    colorSpaceOption: color_space_1.colorSpaceOption,
    deleteAfterOption: delete_after_1.deleteAfterOption,
    folderExpiryOption: folder_expiry_1.folderExpiryOption,
    enableMultiprocessOnLinuxOption: enable_multiprocess_on_linux_1.enableMultiprocessOnLinuxOption,
    glOption: gl_1.glOption,
    enableLambdaInsights: enable_lambda_insights_1.enableLambdaInsights,
    encodingMaxRateOption: encoding_max_rate_1.encodingMaxRateOption,
    encodingBufferSizeOption: encoding_buffer_size_1.encodingBufferSizeOption,
    beepOnFinishOption: beep_on_finish_1.beepOnFinishOption,
    numberOfGifLoopsOption: number_of_gif_loops_1.numberOfGifLoopsOption,
    reproOption: repro_1.reproOption,
    preferLosslessOption: prefer_lossless_1.preferLosslessAudioOption,
    x264Option: x264_preset_1.x264Option,
    logLevelOption: log_level_1.logLevelOption,
    delayRenderTimeoutInMillisecondsOption: timeout_1.delayRenderTimeoutInMillisecondsOption,
    headlessOption: headless_1.headlessOption,
    overwriteOption: overwrite_1.overwriteOption,
    binariesDirectoryOption: binaries_directory_1.binariesDirectoryOption,
    forSeamlessAacConcatenationOption: for_seamless_aac_concatenation_1.forSeamlessAacConcatenationOption,
    separateAudioOption: separate_audio_1.separateAudioOption,
    publicPathOption: public_path_1.publicPathOption,
    publicDirOption: public_dir_1.publicDirOption,
    onBrowserDownloadOption: on_browser_download_1.onBrowserDownloadOption,
    throwIfSiteExistsOption: throw_if_site_exists_1.throwIfSiteExistsOption,
    disableGitSourceOption: disable_git_source_1.disableGitSourceOption,
};
