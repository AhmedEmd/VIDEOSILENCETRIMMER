import type { Codec } from './codec';
import type { LogLevel } from './log-level';
import type { CancelSignal } from './make-cancel-signal';
import type { AudioCodec } from './options/audio-codec';
type Options = {
    files: string[];
    filelistDir: string;
    output: string;
    onProgress: (p: number) => void;
    numberOfFrames: number;
    codec: Codec;
    fps: number;
    numberOfGifLoops: number | null;
    resolvedAudioCodec: AudioCodec | null;
    audioBitrate: string | null;
    indent: boolean;
    logLevel: LogLevel;
    chunkDurationInSeconds: number;
    binariesDirectory: string | null;
    cancelSignal: CancelSignal | undefined;
    seamlessAudio: boolean;
    seamlessVideo: boolean;
    muted: boolean;
};
export declare const combineChunks: ({ files, filelistDir, output, onProgress, numberOfFrames, codec, fps, numberOfGifLoops, resolvedAudioCodec, audioBitrate, indent, logLevel, chunkDurationInSeconds, binariesDirectory, cancelSignal, seamlessAudio, seamlessVideo, muted, }: Options) => Promise<void>;
export {};
