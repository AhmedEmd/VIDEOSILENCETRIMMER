import type { ForwardRefExoticComponent, RefAttributes } from 'react';
import React from 'react';
export declare const AudioForRendering: ForwardRefExoticComponent<Omit<React.DetailedHTMLProps<React.AudioHTMLAttributes<HTMLAudioElement>, HTMLAudioElement>, "nonce" | "onEnded" | "onResize" | "onResizeCapture" | "autoPlay" | "controls"> & {
    name?: string | undefined;
    volume?: import("../volume-prop.js").VolumeProp | undefined;
    playbackRate?: number | undefined;
    acceptableTimeShiftInSeconds?: number | undefined;
    allowAmplificationDuringRender?: boolean | undefined;
    _remotionInternalNeedsDurationCalculation?: boolean | undefined;
    _remotionInternalNativeLoopPassed?: boolean | undefined;
    _remotionDebugSeeking?: boolean | undefined;
    toneFrequency?: number | undefined;
    pauseWhenBuffering?: boolean | undefined;
    showInTimeline?: boolean | undefined;
    delayRenderTimeoutInMilliseconds?: number | undefined;
    delayRenderRetries?: number | undefined;
    loopVolumeCurveBehavior?: import("./use-audio-frame.js").LoopVolumeCurveBehavior | undefined;
} & {
    readonly onDuration: (src: string, durationInSeconds: number) => void;
} & RefAttributes<HTMLAudioElement>>;
